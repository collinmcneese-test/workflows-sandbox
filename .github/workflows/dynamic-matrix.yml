name: Dynamic Matrix

on:
  workflow_dispatch:
    inputs:
      run:
        type: choice
        options:
          - outputs-static
          - matrix-array
          - matrix-object
          - all
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/dynamic-matrix.yml

permissions:
  contents: read

jobs:
  process-run:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.set-run.outputs.run }}
    steps:
      - name: Set Run
        id: set-run
        run: |
          echo "run=${{ inputs.run || 'all' }}" >> $GITHUB_OUTPUT

  outputs-static:
    needs: process-run
    if: |
      needs.process-run.outputs.run == 'outputs-static' ||
      needs.process-run.outputs.run == 'all'
    runs-on: ubuntu-latest
    outputs:
      json-output: ${{ steps.set-output.outputs.json-output }}
    steps:
      - uses: actions/checkout@v4
      - id: set-output
        name: Set JSON Output
        run: |
          # Read the contents of a json file in this repo
          json='[{"directory":"dir1","artifact":"name1"},{"directory":"dir2","artifact":"name2"}]'
          echo "json-output=${json}" >> $GITHUB_OUTPUT

  run-with-json:
    name: run-with-json-${{ matrix.iteration.directory }}-${{ matrix.iteration.artifact }}
    runs-on: ubuntu-latest
    needs: outputs-static
    strategy:
      matrix:
        iteration: ${{ fromJson(needs.outputs-static.outputs.json-output) }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          mkdir -p ${{ matrix.iteration.directory }}
          echo "these are some contents" > ${{ matrix.iteration.directory }}/${{ matrix.iteration.artifact }}.txt
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.iteration.artifact }}
          path: ${{ matrix.iteration.directory }}

  after-run-with-json:
    runs-on: ubuntu-latest
    needs: run-with-json
    steps:
      - run: |
          echo hello

  outputs-array:
    needs: process-run
    if: |
      needs.process-run.outputs.run == 'outputs-array' ||
      needs.process-run.outputs.run == 'all'
    runs-on: ubuntu-latest
    outputs:
      random-number: ${{ steps.random-number.outputs.result }}
    steps:
      - id: random-number
        uses: actions/github-script@v7
        with:
          script: |
            const min = 1;
            const max = 5;
            const randomnumber = Math.floor(Math.random() * (max - min + 1)) + min;
            let returnArray = [];
            for (let i = 1; i <= randomnumber; i++) {
              returnArray.push(`matrix${i}`);
            }
            let summaryMessage = `Used random number ${randomnumber} to create ${returnArray.length} output items`;
            core.summary
                .addHeading('Output Array Summary')
                .addRaw(summaryMessage)
                .write();

            return returnArray;

  matrix-array:
    needs: outputs-array
    runs-on: ubuntu-latest
    strategy:
      matrix:
        iteration: ${{ fromJson(needs.outputs-array.outputs.random-number) }}
    steps:
      - name: Matrix - ${{ matrix.iteration }}
        run: echo ${{ matrix.iteration }} >> $GITHUB_STEP_SUMMARY

  output-object:
    needs: process-run
    if: |
      needs.process-run.outputs.run == 'output-object' ||
      needs.process-run.outputs.run == 'all'
    runs-on: ubuntu-latest
    outputs:
      random-object: ${{ steps.random-object.outputs.result }}
    steps:
      - id: random-object
        uses: actions/github-script@v7
        with:
          script: |
            const min = 1;
            const max = 5;
            const randomnumber = Math.floor(Math.random() * (max - min + 1)) + min;
            let returnObject = [];

            for (let i = 1; i <= randomnumber; i++) {
              returnObject.push({ name: `matrix${i}`, value: `value${i}` });
            }

            let summaryMessage = `Used random number ${randomnumber} to create ${returnObject.length} output items`;
            core.summary
                .addHeading('Output Object Summary')
                .addRaw(summaryMessage)
                .write();

            return returnObject;

  matrix-object:
    needs: output-object
    runs-on: ubuntu-latest
    strategy:
      matrix:
        iteration: ${{ fromJson(needs.output-object.outputs.random-object) }}
    steps:
      - name: Matrix - ${{ matrix.iteration.name }} ${{ matrix.iteration.value }}
        run: echo ${{ matrix.iteration.name }}

  matrix-object-reusable:
    name: matrix-object-reusable-${{ matrix.iteration.name }}-${{ matrix.iteration.value }}
    needs: output-object
    strategy:
      matrix:
        iteration: ${{ fromJson(needs.output-object.outputs.random-object) }}
    uses: ./.github/workflows/dynamic-called.yml
    with:
        name: ${{ matrix.iteration.name }}
        value: ${{ matrix.iteration.value }}

  complete:
    if: ${{ always() }}
    needs:
      - run-with-json
      - after-run-with-json
      - matrix-array
      - matrix-object
      - matrix-object-reusable
    runs-on: ubuntu-latest
    steps:
      - name: Report rate-limit
        uses: collinmcneese/actions-rate-limit-reporter@main
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
